{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\venka\\\\Desktop\\\\ps2\\\\frontend\\\\src\\\\components\\\\ProveMRC.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Snackbar, Alert } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProveMRC = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const handleChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleCheck = async () => {\n    try {\n      // Call an API endpoint or use a function to check if the input is machine-readable\n      const res = await axios.post('http://localhost:5000/check-mrc', {\n        content: inputText\n      });\n      setResult(res.data.isReadable ? 'Yes' : 'No');\n      setError(null);\n    } catch (err) {\n      setError('Error checking machine readability');\n      setResult(null);\n    }\n    setOpenSnackbar(true);\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Prove Machine Readable Code (MRC)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      multiline: true,\n      rows: 10,\n      variant: \"outlined\",\n      fullWidth: true,\n      value: inputText,\n      onChange: handleChange,\n      placeholder: \"Enter or paste text here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginTop: '1rem'\n      },\n      onClick: handleCheck,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        marginTop: '1rem'\n      },\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ProveMRC, \"GSiCsODkMvQ9JcC0YxM+0jHc2Z8=\");\n_c = ProveMRC;\nexport default ProveMRC;\nvar _c;\n$RefreshReg$(_c, \"ProveMRC\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Snackbar","Alert","axios","jsxDEV","_jsxDEV","ProveMRC","_s","inputText","setInputText","result","setResult","error","setError","openSnackbar","setOpenSnackbar","handleChange","event","target","value","handleCheck","res","post","content","data","isReadable","err","handleCloseSnackbar","component","maxWidth","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","multiline","rows","fullWidth","onChange","placeholder","color","onClick","open","autoHideDuration","onClose","severity","_c","$RefreshReg$"],"sources":["C:/Users/venka/Desktop/ps2/frontend/src/components/ProveMRC.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Typography, TextField, Button, Snackbar, Alert } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst ProveMRC = () => {\r\n    const [inputText, setInputText] = useState('');\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setInputText(event.target.value);\r\n    };\r\n\r\n    const handleCheck = async () => {\r\n        try {\r\n            // Call an API endpoint or use a function to check if the input is machine-readable\r\n            const res = await axios.post('http://localhost:5000/check-mrc', { content: inputText });\r\n            setResult(res.data.isReadable ? 'Yes' : 'No');\r\n            setError(null);\r\n        } catch (err) {\r\n            setError('Error checking machine readability');\r\n            setResult(null);\r\n        }\r\n        setOpenSnackbar(true);\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\" style={{ marginTop: '2rem' }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Prove Machine Readable Code (MRC)\r\n            </Typography>\r\n            <TextField\r\n                multiline\r\n                rows={10}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={inputText}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter or paste text here...\"\r\n            />\r\n            <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginTop: '1rem' }}\r\n                onClick={handleCheck}\r\n            >\r\n                Check\r\n            </Button>\r\n            {result && (\r\n                <Typography variant=\"h6\" style={{ marginTop: '1rem' }}>\r\n                    Result: {result}\r\n                </Typography>\r\n            )}\r\n            {error && (\r\n                <Snackbar\r\n                    open={openSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleCloseSnackbar}\r\n                >\r\n                    <Alert onClose={handleCloseSnackbar} severity=\"error\">\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ProveMRC;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AACzF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMoB,YAAY,GAAIC,KAAK,IAAK;IAC5BR,YAAY,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA;MACA,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,iCAAiC,EAAE;QAAEC,OAAO,EAAEf;MAAU,CAAC,CAAC;MACvFG,SAAS,CAACU,GAAG,CAACG,IAAI,CAACC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC;MAC7CZ,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACVb,QAAQ,CAAC,oCAAoC,CAAC;MAC9CF,SAAS,CAAC,IAAI,CAAC;IACnB;IACAI,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMY,mBAAmB,GAAGA,CAAA,KAAM;IAC9BZ,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACIV,OAAA,CAACR,SAAS;IAAC+B,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAC,IAAI;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnE3B,OAAA,CAACP,UAAU;MAACmC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbjC,OAAA,CAACN,SAAS;MACNwC,SAAS;MACTC,IAAI,EAAE,EAAG;MACTP,OAAO,EAAC,UAAU;MAClBQ,SAAS;MACTtB,KAAK,EAAEX,SAAU;MACjBkC,QAAQ,EAAE1B,YAAa;MACvB2B,WAAW,EAAC;IAA6B;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFjC,OAAA,CAACL,MAAM;MACHyC,SAAS;MACTR,OAAO,EAAC,WAAW;MACnBW,KAAK,EAAC,SAAS;MACfd,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAC7Bc,OAAO,EAAEzB,WAAY;MAAAY,QAAA,EACxB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR5B,MAAM,iBACHL,OAAA,CAACP,UAAU;MAACmC,OAAO,EAAC,IAAI;MAACH,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,GAAC,UAC3C,EAACtB,MAAM;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACf,EACA1B,KAAK,iBACFP,OAAA,CAACJ,QAAQ;MACL6C,IAAI,EAAEhC,YAAa;MACnBiC,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAErB,mBAAoB;MAAAK,QAAA,eAE7B3B,OAAA,CAACH,KAAK;QAAC8C,OAAO,EAAErB,mBAAoB;QAACsB,QAAQ,EAAC,OAAO;QAAAjB,QAAA,EAChDpB;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEpB,CAAC;AAAC/B,EAAA,CApEID,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAsEd,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}