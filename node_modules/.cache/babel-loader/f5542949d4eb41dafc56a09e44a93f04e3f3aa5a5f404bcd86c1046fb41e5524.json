{"ast":null,"code":"var _jsxFileName = \"/home/tar_guest/transformdocs/src/components/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Replacing useHistory with useNavigate\nimport axios from 'axios';\nimport { Container, Typography, Button, TextField, CircularProgress, Snackbar, Alert, IconButton, Box } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async event => {\n    event.preventDefault();\n    if (!file) {\n      setError('Please select a file.');\n      setOpenSnackbar(true);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setResponse(res.data);\n      setError(null);\n      setOpenSnackbar(true);\n    } catch (err) {\n      setError('Failed to upload file.');\n      setResponse(null);\n      setOpenSnackbar(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  const handleCopy = () => {\n    if (response) {\n      navigator.clipboard.writeText(JSON.stringify(response, null, 2)).then(() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n      }).catch(err => {\n        console.error('Failed to copy:', err);\n      });\n    }\n  };\n  const handleProveMRCClick = () => {\n    navigate('/prove-mrc'); // Navigate to another page\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    style: {\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Upload Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"file\",\n        onChange: handleFileChange,\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        helperText: \"Choose a file to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: loading,\n        style: {\n          marginTop: '1rem'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 30\n        }, this) : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), response && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: '1rem',\n          position: 'relative',\n          padding: 2,\n          border: '1px solid',\n          borderRadius: 1,\n          overflowY: 'auto',\n          maxHeight: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleCopy,\n          color: \"primary\",\n          style: {\n            position: 'absolute',\n            top: 8,\n            right: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(response, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }, this), copied && /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: copied,\n          autoHideDuration: 2000,\n          onClose: () => setCopied(false),\n          message: \"Copied to clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          marginTop: '1rem'\n        },\n        onClick: handleProveMRCClick // Button to navigate to prove MRC page\n        ,\n        children: \"Prove MRC (Machine Readable Code)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }, this), error && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n};\n_s(Upload, \"7kFhB/goIbcwEEtjQ2j91rBwyB8=\", false, function () {\n  return [useNavigate];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useNavigate","axios","Container","Typography","Button","TextField","CircularProgress","Snackbar","Alert","IconButton","Box","ContentCopyIcon","jsxDEV","_jsxDEV","Upload","_s","file","setFile","response","setResponse","error","setError","loading","setLoading","openSnackbar","setOpenSnackbar","copied","setCopied","navigate","handleFileChange","event","target","files","handleUpload","preventDefault","formData","FormData","append","res","post","headers","data","err","handleCloseSnackbar","handleCopy","navigator","clipboard","writeText","JSON","stringify","then","setTimeout","catch","console","handleProveMRCClick","component","maxWidth","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","type","onChange","fullWidth","margin","helperText","color","disabled","size","Fragment","sx","position","padding","border","borderRadius","overflowY","maxHeight","onClick","top","right","open","autoHideDuration","onClose","message","severity","_c","$RefreshReg$"],"sources":["/home/tar_guest/transformdocs/src/components/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';  // Replacing useHistory with useNavigate\nimport axios from 'axios';\nimport { Container, Typography, Button, TextField, CircularProgress, Snackbar, Alert, IconButton, Box } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nconst Upload = () => {\n    const [file, setFile] = useState(null);\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [copied, setCopied] = useState(false);\n\n    const navigate = useNavigate();  // Use useNavigate instead of useHistory\n\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const handleUpload = async (event) => {\n        event.preventDefault();\n\n        if (!file) {\n            setError('Please select a file.');\n            setOpenSnackbar(true);\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        setLoading(true);\n        try {\n            const res = await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            setResponse(res.data);\n            setError(null);\n            setOpenSnackbar(true);\n        } catch (err) {\n            setError('Failed to upload file.');\n            setResponse(null);\n            setOpenSnackbar(true);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCloseSnackbar = () => {\n        setOpenSnackbar(false);\n    };\n\n    const handleCopy = () => {\n        if (response) {\n            navigator.clipboard.writeText(JSON.stringify(response, null, 2))\n                .then(() => {\n                    setCopied(true);\n                    setTimeout(() => setCopied(false), 2000);\n                })\n                .catch((err) => {\n                    console.error('Failed to copy:', err);\n                });\n        }\n    };\n\n    const handleProveMRCClick = () => {\n        navigate('/prove-mrc');  // Navigate to another page\n    };\n\n    return (\n      <Container component=\"main\" maxWidth=\"md\" style={{ marginTop: '2rem' }}>\n          <Typography variant=\"h4\" gutterBottom>\n              Upload Document\n          </Typography>\n          <form onSubmit={handleUpload} noValidate>\n              <TextField\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  helperText=\"Choose a file to upload\"\n              />\n              <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  style={{ marginTop: '1rem' }}\n              >\n                  {loading ? <CircularProgress size={24} /> : 'Upload'}\n              </Button>\n          </form>\n  \n          {response && (\n              <React.Fragment>\n                  <Box\n                      sx={{\n                          marginTop: '1rem',\n                          position: 'relative',\n                          padding: 2,\n                          border: '1px solid',\n                          borderRadius: 1,\n                          overflowY: 'auto',\n                          maxHeight: '400px',\n                      }}\n                  >\n                      <IconButton\n                          onClick={handleCopy}\n                          color=\"primary\"\n                          style={{\n                              position: 'absolute',\n                              top: 8,\n                              right: 8,\n                          }}\n                      >\n                          <ContentCopyIcon />\n                      </IconButton>\n                      <Typography variant=\"body1\" color=\"textSecondary\">\n                          <pre>{JSON.stringify(response, null, 2)}</pre>\n                      </Typography>\n                      {copied && (\n                          <Snackbar\n                              open={copied}\n                              autoHideDuration={2000}\n                              onClose={() => setCopied(false)}\n                              message=\"Copied to clipboard\"\n                          />\n                      )}\n                  </Box>\n  \n                  {/* Conditionally render Prove MRC button only if response is present */}\n                  <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      style={{ marginTop: '1rem' }}\n                      onClick={handleProveMRCClick}  // Button to navigate to prove MRC page\n                  >\n                      Prove MRC (Machine Readable Code)\n                  </Button>\n              </React.Fragment>\n          )}\n  \n          {error && (\n              <Snackbar\n                  open={openSnackbar}\n                  autoHideDuration={6000}\n                  onClose={handleCloseSnackbar}\n              >\n                  <Alert onClose={handleCloseSnackbar} severity=\"error\">\n                      {error}\n                  </Alert>\n              </Snackbar>\n          )}\n      </Container>\n  );\n  \n};\n\nexport default Upload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}