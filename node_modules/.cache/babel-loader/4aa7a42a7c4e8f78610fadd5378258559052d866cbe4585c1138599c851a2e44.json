{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';// Replacing useHistory with useNavigate\nimport axios from'axios';import{Container,Typography,Button,TextField,CircularProgress,Snackbar,Alert,IconButton,Box}from'@mui/material';import ContentCopyIcon from'@mui/icons-material/ContentCopy';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Upload=()=>{const[file,setFile]=useState(null);const[response,setResponse]=useState(null);const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const[openSnackbar,setOpenSnackbar]=useState(false);const[copied,setCopied]=useState(false);const navigate=useNavigate();// Use useNavigate instead of useHistory\nconst handleFileChange=event=>{setFile(event.target.files[0]);};const handleUpload=async event=>{event.preventDefault();if(!file){setError('Please select a file.');setOpenSnackbar(true);return;}const formData=new FormData();formData.append('file',file);setLoading(true);try{const res=await axios.post('http://localhost:5000/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});setResponse(res.data);setError(null);setOpenSnackbar(true);}catch(err){setError('Failed to upload file.');setResponse(null);setOpenSnackbar(true);}finally{setLoading(false);}};const handleCloseSnackbar=()=>{setOpenSnackbar(false);};const handleCopy=()=>{if(response){navigator.clipboard.writeText(JSON.stringify(response,null,2)).then(()=>{setCopied(true);setTimeout(()=>setCopied(false),2000);}).catch(err=>{console.error('Failed to copy:',err);});}};const handleProveMRCClick=()=>{navigate('/prove-mrc');// Navigate to another page\n};return/*#__PURE__*/_jsxs(Container,{component:\"main\",maxWidth:\"md\",style:{marginTop:'2rem'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Upload Document\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpload,noValidate:true,children:[/*#__PURE__*/_jsx(TextField,{type:\"file\",onChange:handleFileChange,fullWidth:true,margin:\"normal\",variant:\"outlined\",helperText:\"Choose a file to upload\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",disabled:loading,style:{marginTop:'1rem'},children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Upload'})]}),response&&/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{marginTop:'1rem',position:'relative',padding:2,border:'1px solid',borderRadius:1,overflowY:'auto',maxHeight:'400px'},children:[/*#__PURE__*/_jsx(IconButton,{onClick:handleCopy,color:\"primary\",style:{position:'absolute',top:8,right:8},children:/*#__PURE__*/_jsx(ContentCopyIcon,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"textSecondary\",children:/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(response,null,2)})}),copied&&/*#__PURE__*/_jsx(Snackbar,{open:copied,autoHideDuration:2000,onClose:()=>setCopied(false),message:\"Copied to clipboard\"})]}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"secondary\",style:{marginTop:'1rem'},onClick:handleProveMRCClick// Button to navigate to prove MRC page\n,children:\"Prove MRC (Machine Readable Code)\"})]}),error&&/*#__PURE__*/_jsx(Snackbar,{open:openSnackbar,autoHideDuration:6000,onClose:handleCloseSnackbar,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnackbar,severity:\"error\",children:error})})]});};export default Upload;","map":{"version":3,"names":["React","useState","useNavigate","axios","Container","Typography","Button","TextField","CircularProgress","Snackbar","Alert","IconButton","Box","ContentCopyIcon","jsx","_jsx","jsxs","_jsxs","Upload","file","setFile","response","setResponse","error","setError","loading","setLoading","openSnackbar","setOpenSnackbar","copied","setCopied","navigate","handleFileChange","event","target","files","handleUpload","preventDefault","formData","FormData","append","res","post","headers","data","err","handleCloseSnackbar","handleCopy","navigator","clipboard","writeText","JSON","stringify","then","setTimeout","catch","console","handleProveMRCClick","component","maxWidth","style","marginTop","children","variant","gutterBottom","onSubmit","noValidate","type","onChange","fullWidth","margin","helperText","color","disabled","size","Fragment","sx","position","padding","border","borderRadius","overflowY","maxHeight","onClick","top","right","open","autoHideDuration","onClose","message","severity"],"sources":["/home/tar_guest/transformdocs/src/components/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';  // Replacing useHistory with useNavigate\nimport axios from 'axios';\nimport { Container, Typography, Button, TextField, CircularProgress, Snackbar, Alert, IconButton, Box } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nconst Upload = () => {\n    const [file, setFile] = useState(null);\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [copied, setCopied] = useState(false);\n\n    const navigate = useNavigate();  // Use useNavigate instead of useHistory\n\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const handleUpload = async (event) => {\n        event.preventDefault();\n\n        if (!file) {\n            setError('Please select a file.');\n            setOpenSnackbar(true);\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        setLoading(true);\n        try {\n            const res = await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            setResponse(res.data);\n            setError(null);\n            setOpenSnackbar(true);\n        } catch (err) {\n            setError('Failed to upload file.');\n            setResponse(null);\n            setOpenSnackbar(true);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCloseSnackbar = () => {\n        setOpenSnackbar(false);\n    };\n\n    const handleCopy = () => {\n        if (response) {\n            navigator.clipboard.writeText(JSON.stringify(response, null, 2))\n                .then(() => {\n                    setCopied(true);\n                    setTimeout(() => setCopied(false), 2000);\n                })\n                .catch((err) => {\n                    console.error('Failed to copy:', err);\n                });\n        }\n    };\n\n    const handleProveMRCClick = () => {\n        navigate('/prove-mrc');  // Navigate to another page\n    };\n\n    return (\n      <Container component=\"main\" maxWidth=\"md\" style={{ marginTop: '2rem' }}>\n          <Typography variant=\"h4\" gutterBottom>\n              Upload Document\n          </Typography>\n          <form onSubmit={handleUpload} noValidate>\n              <TextField\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  helperText=\"Choose a file to upload\"\n              />\n              <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  style={{ marginTop: '1rem' }}\n              >\n                  {loading ? <CircularProgress size={24} /> : 'Upload'}\n              </Button>\n          </form>\n  \n          {response && (\n              <React.Fragment>\n                  <Box\n                      sx={{\n                          marginTop: '1rem',\n                          position: 'relative',\n                          padding: 2,\n                          border: '1px solid',\n                          borderRadius: 1,\n                          overflowY: 'auto',\n                          maxHeight: '400px',\n                      }}\n                  >\n                      <IconButton\n                          onClick={handleCopy}\n                          color=\"primary\"\n                          style={{\n                              position: 'absolute',\n                              top: 8,\n                              right: 8,\n                          }}\n                      >\n                          <ContentCopyIcon />\n                      </IconButton>\n                      <Typography variant=\"body1\" color=\"textSecondary\">\n                          <pre>{JSON.stringify(response, null, 2)}</pre>\n                      </Typography>\n                      {copied && (\n                          <Snackbar\n                              open={copied}\n                              autoHideDuration={2000}\n                              onClose={() => setCopied(false)}\n                              message=\"Copied to clipboard\"\n                          />\n                      )}\n                  </Box>\n  \n                  {/* Conditionally render Prove MRC button only if response is present */}\n                  <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      style={{ marginTop: '1rem' }}\n                      onClick={handleProveMRCClick}  // Button to navigate to prove MRC page\n                  >\n                      Prove MRC (Machine Readable Code)\n                  </Button>\n              </React.Fragment>\n          )}\n  \n          {error && (\n              <Snackbar\n                  open={openSnackbar}\n                  autoHideDuration={6000}\n                  onClose={handleCloseSnackbar}\n              >\n                  <Alert onClose={handleCloseSnackbar} severity=\"error\">\n                      {error}\n                  </Alert>\n              </Snackbar>\n          )}\n      </Container>\n  );\n  \n};\n\nexport default Upload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}